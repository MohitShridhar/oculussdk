# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 2.8

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# The program to use to edit the cache.
CMAKE_EDIT_COMMAND = /usr/bin/ccmake

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/caguero/workspace/OculusSDK/LibOVR

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/caguero/workspace/OculusSDK/LibOVR/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip
.PHONY : install/strip/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\" \"shlib\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/caguero/workspace/OculusSDK/LibOVR/build/CMakeFiles /home/caguero/workspace/OculusSDK/LibOVR/build/CMakeFiles/progress.marks
	$(MAKE) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/caguero/workspace/OculusSDK/LibOVR/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named OculusVR

# Build rule for target.
OculusVR: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 OculusVR
.PHONY : OculusVR

# fast build rule for target.
OculusVR/fast:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/build
.PHONY : OculusVR/fast

Src/Kernel/OVR_Alg.o: Src/Kernel/OVR_Alg.cpp.o
.PHONY : Src/Kernel/OVR_Alg.o

# target to build an object file
Src/Kernel/OVR_Alg.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Alg.cpp.o
.PHONY : Src/Kernel/OVR_Alg.cpp.o

Src/Kernel/OVR_Alg.i: Src/Kernel/OVR_Alg.cpp.i
.PHONY : Src/Kernel/OVR_Alg.i

# target to preprocess a source file
Src/Kernel/OVR_Alg.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Alg.cpp.i
.PHONY : Src/Kernel/OVR_Alg.cpp.i

Src/Kernel/OVR_Alg.s: Src/Kernel/OVR_Alg.cpp.s
.PHONY : Src/Kernel/OVR_Alg.s

# target to generate assembly for a file
Src/Kernel/OVR_Alg.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Alg.cpp.s
.PHONY : Src/Kernel/OVR_Alg.cpp.s

Src/Kernel/OVR_Allocator.o: Src/Kernel/OVR_Allocator.cpp.o
.PHONY : Src/Kernel/OVR_Allocator.o

# target to build an object file
Src/Kernel/OVR_Allocator.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Allocator.cpp.o
.PHONY : Src/Kernel/OVR_Allocator.cpp.o

Src/Kernel/OVR_Allocator.i: Src/Kernel/OVR_Allocator.cpp.i
.PHONY : Src/Kernel/OVR_Allocator.i

# target to preprocess a source file
Src/Kernel/OVR_Allocator.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Allocator.cpp.i
.PHONY : Src/Kernel/OVR_Allocator.cpp.i

Src/Kernel/OVR_Allocator.s: Src/Kernel/OVR_Allocator.cpp.s
.PHONY : Src/Kernel/OVR_Allocator.s

# target to generate assembly for a file
Src/Kernel/OVR_Allocator.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Allocator.cpp.s
.PHONY : Src/Kernel/OVR_Allocator.cpp.s

Src/Kernel/OVR_Atomic.o: Src/Kernel/OVR_Atomic.cpp.o
.PHONY : Src/Kernel/OVR_Atomic.o

# target to build an object file
Src/Kernel/OVR_Atomic.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Atomic.cpp.o
.PHONY : Src/Kernel/OVR_Atomic.cpp.o

Src/Kernel/OVR_Atomic.i: Src/Kernel/OVR_Atomic.cpp.i
.PHONY : Src/Kernel/OVR_Atomic.i

# target to preprocess a source file
Src/Kernel/OVR_Atomic.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Atomic.cpp.i
.PHONY : Src/Kernel/OVR_Atomic.cpp.i

Src/Kernel/OVR_Atomic.s: Src/Kernel/OVR_Atomic.cpp.s
.PHONY : Src/Kernel/OVR_Atomic.s

# target to generate assembly for a file
Src/Kernel/OVR_Atomic.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Atomic.cpp.s
.PHONY : Src/Kernel/OVR_Atomic.cpp.s

Src/Kernel/OVR_File.o: Src/Kernel/OVR_File.cpp.o
.PHONY : Src/Kernel/OVR_File.o

# target to build an object file
Src/Kernel/OVR_File.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_File.cpp.o
.PHONY : Src/Kernel/OVR_File.cpp.o

Src/Kernel/OVR_File.i: Src/Kernel/OVR_File.cpp.i
.PHONY : Src/Kernel/OVR_File.i

# target to preprocess a source file
Src/Kernel/OVR_File.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_File.cpp.i
.PHONY : Src/Kernel/OVR_File.cpp.i

Src/Kernel/OVR_File.s: Src/Kernel/OVR_File.cpp.s
.PHONY : Src/Kernel/OVR_File.s

# target to generate assembly for a file
Src/Kernel/OVR_File.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_File.cpp.s
.PHONY : Src/Kernel/OVR_File.cpp.s

Src/Kernel/OVR_FileFILE.o: Src/Kernel/OVR_FileFILE.cpp.o
.PHONY : Src/Kernel/OVR_FileFILE.o

# target to build an object file
Src/Kernel/OVR_FileFILE.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_FileFILE.cpp.o
.PHONY : Src/Kernel/OVR_FileFILE.cpp.o

Src/Kernel/OVR_FileFILE.i: Src/Kernel/OVR_FileFILE.cpp.i
.PHONY : Src/Kernel/OVR_FileFILE.i

# target to preprocess a source file
Src/Kernel/OVR_FileFILE.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_FileFILE.cpp.i
.PHONY : Src/Kernel/OVR_FileFILE.cpp.i

Src/Kernel/OVR_FileFILE.s: Src/Kernel/OVR_FileFILE.cpp.s
.PHONY : Src/Kernel/OVR_FileFILE.s

# target to generate assembly for a file
Src/Kernel/OVR_FileFILE.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_FileFILE.cpp.s
.PHONY : Src/Kernel/OVR_FileFILE.cpp.s

Src/Kernel/OVR_Log.o: Src/Kernel/OVR_Log.cpp.o
.PHONY : Src/Kernel/OVR_Log.o

# target to build an object file
Src/Kernel/OVR_Log.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Log.cpp.o
.PHONY : Src/Kernel/OVR_Log.cpp.o

Src/Kernel/OVR_Log.i: Src/Kernel/OVR_Log.cpp.i
.PHONY : Src/Kernel/OVR_Log.i

# target to preprocess a source file
Src/Kernel/OVR_Log.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Log.cpp.i
.PHONY : Src/Kernel/OVR_Log.cpp.i

Src/Kernel/OVR_Log.s: Src/Kernel/OVR_Log.cpp.s
.PHONY : Src/Kernel/OVR_Log.s

# target to generate assembly for a file
Src/Kernel/OVR_Log.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Log.cpp.s
.PHONY : Src/Kernel/OVR_Log.cpp.s

Src/Kernel/OVR_Math.o: Src/Kernel/OVR_Math.cpp.o
.PHONY : Src/Kernel/OVR_Math.o

# target to build an object file
Src/Kernel/OVR_Math.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Math.cpp.o
.PHONY : Src/Kernel/OVR_Math.cpp.o

Src/Kernel/OVR_Math.i: Src/Kernel/OVR_Math.cpp.i
.PHONY : Src/Kernel/OVR_Math.i

# target to preprocess a source file
Src/Kernel/OVR_Math.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Math.cpp.i
.PHONY : Src/Kernel/OVR_Math.cpp.i

Src/Kernel/OVR_Math.s: Src/Kernel/OVR_Math.cpp.s
.PHONY : Src/Kernel/OVR_Math.s

# target to generate assembly for a file
Src/Kernel/OVR_Math.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Math.cpp.s
.PHONY : Src/Kernel/OVR_Math.cpp.s

Src/Kernel/OVR_RefCount.o: Src/Kernel/OVR_RefCount.cpp.o
.PHONY : Src/Kernel/OVR_RefCount.o

# target to build an object file
Src/Kernel/OVR_RefCount.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_RefCount.cpp.o
.PHONY : Src/Kernel/OVR_RefCount.cpp.o

Src/Kernel/OVR_RefCount.i: Src/Kernel/OVR_RefCount.cpp.i
.PHONY : Src/Kernel/OVR_RefCount.i

# target to preprocess a source file
Src/Kernel/OVR_RefCount.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_RefCount.cpp.i
.PHONY : Src/Kernel/OVR_RefCount.cpp.i

Src/Kernel/OVR_RefCount.s: Src/Kernel/OVR_RefCount.cpp.s
.PHONY : Src/Kernel/OVR_RefCount.s

# target to generate assembly for a file
Src/Kernel/OVR_RefCount.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_RefCount.cpp.s
.PHONY : Src/Kernel/OVR_RefCount.cpp.s

Src/Kernel/OVR_Std.o: Src/Kernel/OVR_Std.cpp.o
.PHONY : Src/Kernel/OVR_Std.o

# target to build an object file
Src/Kernel/OVR_Std.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Std.cpp.o
.PHONY : Src/Kernel/OVR_Std.cpp.o

Src/Kernel/OVR_Std.i: Src/Kernel/OVR_Std.cpp.i
.PHONY : Src/Kernel/OVR_Std.i

# target to preprocess a source file
Src/Kernel/OVR_Std.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Std.cpp.i
.PHONY : Src/Kernel/OVR_Std.cpp.i

Src/Kernel/OVR_Std.s: Src/Kernel/OVR_Std.cpp.s
.PHONY : Src/Kernel/OVR_Std.s

# target to generate assembly for a file
Src/Kernel/OVR_Std.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Std.cpp.s
.PHONY : Src/Kernel/OVR_Std.cpp.s

Src/Kernel/OVR_String.o: Src/Kernel/OVR_String.cpp.o
.PHONY : Src/Kernel/OVR_String.o

# target to build an object file
Src/Kernel/OVR_String.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String.cpp.o
.PHONY : Src/Kernel/OVR_String.cpp.o

Src/Kernel/OVR_String.i: Src/Kernel/OVR_String.cpp.i
.PHONY : Src/Kernel/OVR_String.i

# target to preprocess a source file
Src/Kernel/OVR_String.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String.cpp.i
.PHONY : Src/Kernel/OVR_String.cpp.i

Src/Kernel/OVR_String.s: Src/Kernel/OVR_String.cpp.s
.PHONY : Src/Kernel/OVR_String.s

# target to generate assembly for a file
Src/Kernel/OVR_String.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String.cpp.s
.PHONY : Src/Kernel/OVR_String.cpp.s

Src/Kernel/OVR_String_FormatUtil.o: Src/Kernel/OVR_String_FormatUtil.cpp.o
.PHONY : Src/Kernel/OVR_String_FormatUtil.o

# target to build an object file
Src/Kernel/OVR_String_FormatUtil.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String_FormatUtil.cpp.o
.PHONY : Src/Kernel/OVR_String_FormatUtil.cpp.o

Src/Kernel/OVR_String_FormatUtil.i: Src/Kernel/OVR_String_FormatUtil.cpp.i
.PHONY : Src/Kernel/OVR_String_FormatUtil.i

# target to preprocess a source file
Src/Kernel/OVR_String_FormatUtil.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String_FormatUtil.cpp.i
.PHONY : Src/Kernel/OVR_String_FormatUtil.cpp.i

Src/Kernel/OVR_String_FormatUtil.s: Src/Kernel/OVR_String_FormatUtil.cpp.s
.PHONY : Src/Kernel/OVR_String_FormatUtil.s

# target to generate assembly for a file
Src/Kernel/OVR_String_FormatUtil.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String_FormatUtil.cpp.s
.PHONY : Src/Kernel/OVR_String_FormatUtil.cpp.s

Src/Kernel/OVR_String_PathUtil.o: Src/Kernel/OVR_String_PathUtil.cpp.o
.PHONY : Src/Kernel/OVR_String_PathUtil.o

# target to build an object file
Src/Kernel/OVR_String_PathUtil.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String_PathUtil.cpp.o
.PHONY : Src/Kernel/OVR_String_PathUtil.cpp.o

Src/Kernel/OVR_String_PathUtil.i: Src/Kernel/OVR_String_PathUtil.cpp.i
.PHONY : Src/Kernel/OVR_String_PathUtil.i

# target to preprocess a source file
Src/Kernel/OVR_String_PathUtil.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String_PathUtil.cpp.i
.PHONY : Src/Kernel/OVR_String_PathUtil.cpp.i

Src/Kernel/OVR_String_PathUtil.s: Src/Kernel/OVR_String_PathUtil.cpp.s
.PHONY : Src/Kernel/OVR_String_PathUtil.s

# target to generate assembly for a file
Src/Kernel/OVR_String_PathUtil.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_String_PathUtil.cpp.s
.PHONY : Src/Kernel/OVR_String_PathUtil.cpp.s

Src/Kernel/OVR_SysFile.o: Src/Kernel/OVR_SysFile.cpp.o
.PHONY : Src/Kernel/OVR_SysFile.o

# target to build an object file
Src/Kernel/OVR_SysFile.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_SysFile.cpp.o
.PHONY : Src/Kernel/OVR_SysFile.cpp.o

Src/Kernel/OVR_SysFile.i: Src/Kernel/OVR_SysFile.cpp.i
.PHONY : Src/Kernel/OVR_SysFile.i

# target to preprocess a source file
Src/Kernel/OVR_SysFile.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_SysFile.cpp.i
.PHONY : Src/Kernel/OVR_SysFile.cpp.i

Src/Kernel/OVR_SysFile.s: Src/Kernel/OVR_SysFile.cpp.s
.PHONY : Src/Kernel/OVR_SysFile.s

# target to generate assembly for a file
Src/Kernel/OVR_SysFile.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_SysFile.cpp.s
.PHONY : Src/Kernel/OVR_SysFile.cpp.s

Src/Kernel/OVR_System.o: Src/Kernel/OVR_System.cpp.o
.PHONY : Src/Kernel/OVR_System.o

# target to build an object file
Src/Kernel/OVR_System.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_System.cpp.o
.PHONY : Src/Kernel/OVR_System.cpp.o

Src/Kernel/OVR_System.i: Src/Kernel/OVR_System.cpp.i
.PHONY : Src/Kernel/OVR_System.i

# target to preprocess a source file
Src/Kernel/OVR_System.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_System.cpp.i
.PHONY : Src/Kernel/OVR_System.cpp.i

Src/Kernel/OVR_System.s: Src/Kernel/OVR_System.cpp.s
.PHONY : Src/Kernel/OVR_System.s

# target to generate assembly for a file
Src/Kernel/OVR_System.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_System.cpp.s
.PHONY : Src/Kernel/OVR_System.cpp.s

Src/Kernel/OVR_ThreadsPthread.o: Src/Kernel/OVR_ThreadsPthread.cpp.o
.PHONY : Src/Kernel/OVR_ThreadsPthread.o

# target to build an object file
Src/Kernel/OVR_ThreadsPthread.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_ThreadsPthread.cpp.o
.PHONY : Src/Kernel/OVR_ThreadsPthread.cpp.o

Src/Kernel/OVR_ThreadsPthread.i: Src/Kernel/OVR_ThreadsPthread.cpp.i
.PHONY : Src/Kernel/OVR_ThreadsPthread.i

# target to preprocess a source file
Src/Kernel/OVR_ThreadsPthread.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_ThreadsPthread.cpp.i
.PHONY : Src/Kernel/OVR_ThreadsPthread.cpp.i

Src/Kernel/OVR_ThreadsPthread.s: Src/Kernel/OVR_ThreadsPthread.cpp.s
.PHONY : Src/Kernel/OVR_ThreadsPthread.s

# target to generate assembly for a file
Src/Kernel/OVR_ThreadsPthread.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_ThreadsPthread.cpp.s
.PHONY : Src/Kernel/OVR_ThreadsPthread.cpp.s

Src/Kernel/OVR_Timer.o: Src/Kernel/OVR_Timer.cpp.o
.PHONY : Src/Kernel/OVR_Timer.o

# target to build an object file
Src/Kernel/OVR_Timer.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Timer.cpp.o
.PHONY : Src/Kernel/OVR_Timer.cpp.o

Src/Kernel/OVR_Timer.i: Src/Kernel/OVR_Timer.cpp.i
.PHONY : Src/Kernel/OVR_Timer.i

# target to preprocess a source file
Src/Kernel/OVR_Timer.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Timer.cpp.i
.PHONY : Src/Kernel/OVR_Timer.cpp.i

Src/Kernel/OVR_Timer.s: Src/Kernel/OVR_Timer.cpp.s
.PHONY : Src/Kernel/OVR_Timer.s

# target to generate assembly for a file
Src/Kernel/OVR_Timer.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_Timer.cpp.s
.PHONY : Src/Kernel/OVR_Timer.cpp.s

Src/Kernel/OVR_UTF8Util.o: Src/Kernel/OVR_UTF8Util.cpp.o
.PHONY : Src/Kernel/OVR_UTF8Util.o

# target to build an object file
Src/Kernel/OVR_UTF8Util.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_UTF8Util.cpp.o
.PHONY : Src/Kernel/OVR_UTF8Util.cpp.o

Src/Kernel/OVR_UTF8Util.i: Src/Kernel/OVR_UTF8Util.cpp.i
.PHONY : Src/Kernel/OVR_UTF8Util.i

# target to preprocess a source file
Src/Kernel/OVR_UTF8Util.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_UTF8Util.cpp.i
.PHONY : Src/Kernel/OVR_UTF8Util.cpp.i

Src/Kernel/OVR_UTF8Util.s: Src/Kernel/OVR_UTF8Util.cpp.s
.PHONY : Src/Kernel/OVR_UTF8Util.s

# target to generate assembly for a file
Src/Kernel/OVR_UTF8Util.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Kernel/OVR_UTF8Util.cpp.s
.PHONY : Src/Kernel/OVR_UTF8Util.cpp.s

Src/OVR_DeviceHandle.o: Src/OVR_DeviceHandle.cpp.o
.PHONY : Src/OVR_DeviceHandle.o

# target to build an object file
Src/OVR_DeviceHandle.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_DeviceHandle.cpp.o
.PHONY : Src/OVR_DeviceHandle.cpp.o

Src/OVR_DeviceHandle.i: Src/OVR_DeviceHandle.cpp.i
.PHONY : Src/OVR_DeviceHandle.i

# target to preprocess a source file
Src/OVR_DeviceHandle.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_DeviceHandle.cpp.i
.PHONY : Src/OVR_DeviceHandle.cpp.i

Src/OVR_DeviceHandle.s: Src/OVR_DeviceHandle.cpp.s
.PHONY : Src/OVR_DeviceHandle.s

# target to generate assembly for a file
Src/OVR_DeviceHandle.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_DeviceHandle.cpp.s
.PHONY : Src/OVR_DeviceHandle.cpp.s

Src/OVR_DeviceImpl.o: Src/OVR_DeviceImpl.cpp.o
.PHONY : Src/OVR_DeviceImpl.o

# target to build an object file
Src/OVR_DeviceImpl.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_DeviceImpl.cpp.o
.PHONY : Src/OVR_DeviceImpl.cpp.o

Src/OVR_DeviceImpl.i: Src/OVR_DeviceImpl.cpp.i
.PHONY : Src/OVR_DeviceImpl.i

# target to preprocess a source file
Src/OVR_DeviceImpl.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_DeviceImpl.cpp.i
.PHONY : Src/OVR_DeviceImpl.cpp.i

Src/OVR_DeviceImpl.s: Src/OVR_DeviceImpl.cpp.s
.PHONY : Src/OVR_DeviceImpl.s

# target to generate assembly for a file
Src/OVR_DeviceImpl.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_DeviceImpl.cpp.s
.PHONY : Src/OVR_DeviceImpl.cpp.s

Src/OVR_JSON.o: Src/OVR_JSON.cpp.o
.PHONY : Src/OVR_JSON.o

# target to build an object file
Src/OVR_JSON.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_JSON.cpp.o
.PHONY : Src/OVR_JSON.cpp.o

Src/OVR_JSON.i: Src/OVR_JSON.cpp.i
.PHONY : Src/OVR_JSON.i

# target to preprocess a source file
Src/OVR_JSON.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_JSON.cpp.i
.PHONY : Src/OVR_JSON.cpp.i

Src/OVR_JSON.s: Src/OVR_JSON.cpp.s
.PHONY : Src/OVR_JSON.s

# target to generate assembly for a file
Src/OVR_JSON.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_JSON.cpp.s
.PHONY : Src/OVR_JSON.cpp.s

Src/OVR_LatencyTestImpl.o: Src/OVR_LatencyTestImpl.cpp.o
.PHONY : Src/OVR_LatencyTestImpl.o

# target to build an object file
Src/OVR_LatencyTestImpl.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_LatencyTestImpl.cpp.o
.PHONY : Src/OVR_LatencyTestImpl.cpp.o

Src/OVR_LatencyTestImpl.i: Src/OVR_LatencyTestImpl.cpp.i
.PHONY : Src/OVR_LatencyTestImpl.i

# target to preprocess a source file
Src/OVR_LatencyTestImpl.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_LatencyTestImpl.cpp.i
.PHONY : Src/OVR_LatencyTestImpl.cpp.i

Src/OVR_LatencyTestImpl.s: Src/OVR_LatencyTestImpl.cpp.s
.PHONY : Src/OVR_LatencyTestImpl.s

# target to generate assembly for a file
Src/OVR_LatencyTestImpl.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_LatencyTestImpl.cpp.s
.PHONY : Src/OVR_LatencyTestImpl.cpp.s

Src/OVR_Linux_DeviceManager.o: Src/OVR_Linux_DeviceManager.cpp.o
.PHONY : Src/OVR_Linux_DeviceManager.o

# target to build an object file
Src/OVR_Linux_DeviceManager.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_DeviceManager.cpp.o
.PHONY : Src/OVR_Linux_DeviceManager.cpp.o

Src/OVR_Linux_DeviceManager.i: Src/OVR_Linux_DeviceManager.cpp.i
.PHONY : Src/OVR_Linux_DeviceManager.i

# target to preprocess a source file
Src/OVR_Linux_DeviceManager.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_DeviceManager.cpp.i
.PHONY : Src/OVR_Linux_DeviceManager.cpp.i

Src/OVR_Linux_DeviceManager.s: Src/OVR_Linux_DeviceManager.cpp.s
.PHONY : Src/OVR_Linux_DeviceManager.s

# target to generate assembly for a file
Src/OVR_Linux_DeviceManager.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_DeviceManager.cpp.s
.PHONY : Src/OVR_Linux_DeviceManager.cpp.s

Src/OVR_Linux_HIDDevice.o: Src/OVR_Linux_HIDDevice.cpp.o
.PHONY : Src/OVR_Linux_HIDDevice.o

# target to build an object file
Src/OVR_Linux_HIDDevice.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_HIDDevice.cpp.o
.PHONY : Src/OVR_Linux_HIDDevice.cpp.o

Src/OVR_Linux_HIDDevice.i: Src/OVR_Linux_HIDDevice.cpp.i
.PHONY : Src/OVR_Linux_HIDDevice.i

# target to preprocess a source file
Src/OVR_Linux_HIDDevice.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_HIDDevice.cpp.i
.PHONY : Src/OVR_Linux_HIDDevice.cpp.i

Src/OVR_Linux_HIDDevice.s: Src/OVR_Linux_HIDDevice.cpp.s
.PHONY : Src/OVR_Linux_HIDDevice.s

# target to generate assembly for a file
Src/OVR_Linux_HIDDevice.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_HIDDevice.cpp.s
.PHONY : Src/OVR_Linux_HIDDevice.cpp.s

Src/OVR_Linux_HMDDevice.o: Src/OVR_Linux_HMDDevice.cpp.o
.PHONY : Src/OVR_Linux_HMDDevice.o

# target to build an object file
Src/OVR_Linux_HMDDevice.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_HMDDevice.cpp.o
.PHONY : Src/OVR_Linux_HMDDevice.cpp.o

Src/OVR_Linux_HMDDevice.i: Src/OVR_Linux_HMDDevice.cpp.i
.PHONY : Src/OVR_Linux_HMDDevice.i

# target to preprocess a source file
Src/OVR_Linux_HMDDevice.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_HMDDevice.cpp.i
.PHONY : Src/OVR_Linux_HMDDevice.cpp.i

Src/OVR_Linux_HMDDevice.s: Src/OVR_Linux_HMDDevice.cpp.s
.PHONY : Src/OVR_Linux_HMDDevice.s

# target to generate assembly for a file
Src/OVR_Linux_HMDDevice.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_HMDDevice.cpp.s
.PHONY : Src/OVR_Linux_HMDDevice.cpp.s

Src/OVR_Linux_SensorDevice.o: Src/OVR_Linux_SensorDevice.cpp.o
.PHONY : Src/OVR_Linux_SensorDevice.o

# target to build an object file
Src/OVR_Linux_SensorDevice.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_SensorDevice.cpp.o
.PHONY : Src/OVR_Linux_SensorDevice.cpp.o

Src/OVR_Linux_SensorDevice.i: Src/OVR_Linux_SensorDevice.cpp.i
.PHONY : Src/OVR_Linux_SensorDevice.i

# target to preprocess a source file
Src/OVR_Linux_SensorDevice.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_SensorDevice.cpp.i
.PHONY : Src/OVR_Linux_SensorDevice.cpp.i

Src/OVR_Linux_SensorDevice.s: Src/OVR_Linux_SensorDevice.cpp.s
.PHONY : Src/OVR_Linux_SensorDevice.s

# target to generate assembly for a file
Src/OVR_Linux_SensorDevice.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Linux_SensorDevice.cpp.s
.PHONY : Src/OVR_Linux_SensorDevice.cpp.s

Src/OVR_Profile.o: Src/OVR_Profile.cpp.o
.PHONY : Src/OVR_Profile.o

# target to build an object file
Src/OVR_Profile.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Profile.cpp.o
.PHONY : Src/OVR_Profile.cpp.o

Src/OVR_Profile.i: Src/OVR_Profile.cpp.i
.PHONY : Src/OVR_Profile.i

# target to preprocess a source file
Src/OVR_Profile.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Profile.cpp.i
.PHONY : Src/OVR_Profile.cpp.i

Src/OVR_Profile.s: Src/OVR_Profile.cpp.s
.PHONY : Src/OVR_Profile.s

# target to generate assembly for a file
Src/OVR_Profile.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_Profile.cpp.s
.PHONY : Src/OVR_Profile.cpp.s

Src/OVR_SensorFilter.o: Src/OVR_SensorFilter.cpp.o
.PHONY : Src/OVR_SensorFilter.o

# target to build an object file
Src/OVR_SensorFilter.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorFilter.cpp.o
.PHONY : Src/OVR_SensorFilter.cpp.o

Src/OVR_SensorFilter.i: Src/OVR_SensorFilter.cpp.i
.PHONY : Src/OVR_SensorFilter.i

# target to preprocess a source file
Src/OVR_SensorFilter.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorFilter.cpp.i
.PHONY : Src/OVR_SensorFilter.cpp.i

Src/OVR_SensorFilter.s: Src/OVR_SensorFilter.cpp.s
.PHONY : Src/OVR_SensorFilter.s

# target to generate assembly for a file
Src/OVR_SensorFilter.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorFilter.cpp.s
.PHONY : Src/OVR_SensorFilter.cpp.s

Src/OVR_SensorFusion.o: Src/OVR_SensorFusion.cpp.o
.PHONY : Src/OVR_SensorFusion.o

# target to build an object file
Src/OVR_SensorFusion.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorFusion.cpp.o
.PHONY : Src/OVR_SensorFusion.cpp.o

Src/OVR_SensorFusion.i: Src/OVR_SensorFusion.cpp.i
.PHONY : Src/OVR_SensorFusion.i

# target to preprocess a source file
Src/OVR_SensorFusion.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorFusion.cpp.i
.PHONY : Src/OVR_SensorFusion.cpp.i

Src/OVR_SensorFusion.s: Src/OVR_SensorFusion.cpp.s
.PHONY : Src/OVR_SensorFusion.s

# target to generate assembly for a file
Src/OVR_SensorFusion.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorFusion.cpp.s
.PHONY : Src/OVR_SensorFusion.cpp.s

Src/OVR_SensorImpl.o: Src/OVR_SensorImpl.cpp.o
.PHONY : Src/OVR_SensorImpl.o

# target to build an object file
Src/OVR_SensorImpl.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorImpl.cpp.o
.PHONY : Src/OVR_SensorImpl.cpp.o

Src/OVR_SensorImpl.i: Src/OVR_SensorImpl.cpp.i
.PHONY : Src/OVR_SensorImpl.i

# target to preprocess a source file
Src/OVR_SensorImpl.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorImpl.cpp.i
.PHONY : Src/OVR_SensorImpl.cpp.i

Src/OVR_SensorImpl.s: Src/OVR_SensorImpl.cpp.s
.PHONY : Src/OVR_SensorImpl.s

# target to generate assembly for a file
Src/OVR_SensorImpl.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_SensorImpl.cpp.s
.PHONY : Src/OVR_SensorImpl.cpp.s

Src/OVR_ThreadCommandQueue.o: Src/OVR_ThreadCommandQueue.cpp.o
.PHONY : Src/OVR_ThreadCommandQueue.o

# target to build an object file
Src/OVR_ThreadCommandQueue.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_ThreadCommandQueue.cpp.o
.PHONY : Src/OVR_ThreadCommandQueue.cpp.o

Src/OVR_ThreadCommandQueue.i: Src/OVR_ThreadCommandQueue.cpp.i
.PHONY : Src/OVR_ThreadCommandQueue.i

# target to preprocess a source file
Src/OVR_ThreadCommandQueue.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_ThreadCommandQueue.cpp.i
.PHONY : Src/OVR_ThreadCommandQueue.cpp.i

Src/OVR_ThreadCommandQueue.s: Src/OVR_ThreadCommandQueue.cpp.s
.PHONY : Src/OVR_ThreadCommandQueue.s

# target to generate assembly for a file
Src/OVR_ThreadCommandQueue.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/OVR_ThreadCommandQueue.cpp.s
.PHONY : Src/OVR_ThreadCommandQueue.cpp.s

Src/Util/Util_LatencyTest.o: Src/Util/Util_LatencyTest.cpp.o
.PHONY : Src/Util/Util_LatencyTest.o

# target to build an object file
Src/Util/Util_LatencyTest.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Util/Util_LatencyTest.cpp.o
.PHONY : Src/Util/Util_LatencyTest.cpp.o

Src/Util/Util_LatencyTest.i: Src/Util/Util_LatencyTest.cpp.i
.PHONY : Src/Util/Util_LatencyTest.i

# target to preprocess a source file
Src/Util/Util_LatencyTest.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Util/Util_LatencyTest.cpp.i
.PHONY : Src/Util/Util_LatencyTest.cpp.i

Src/Util/Util_LatencyTest.s: Src/Util/Util_LatencyTest.cpp.s
.PHONY : Src/Util/Util_LatencyTest.s

# target to generate assembly for a file
Src/Util/Util_LatencyTest.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Util/Util_LatencyTest.cpp.s
.PHONY : Src/Util/Util_LatencyTest.cpp.s

Src/Util/Util_Render_Stereo.o: Src/Util/Util_Render_Stereo.cpp.o
.PHONY : Src/Util/Util_Render_Stereo.o

# target to build an object file
Src/Util/Util_Render_Stereo.cpp.o:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Util/Util_Render_Stereo.cpp.o
.PHONY : Src/Util/Util_Render_Stereo.cpp.o

Src/Util/Util_Render_Stereo.i: Src/Util/Util_Render_Stereo.cpp.i
.PHONY : Src/Util/Util_Render_Stereo.i

# target to preprocess a source file
Src/Util/Util_Render_Stereo.cpp.i:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Util/Util_Render_Stereo.cpp.i
.PHONY : Src/Util/Util_Render_Stereo.cpp.i

Src/Util/Util_Render_Stereo.s: Src/Util/Util_Render_Stereo.cpp.s
.PHONY : Src/Util/Util_Render_Stereo.s

# target to generate assembly for a file
Src/Util/Util_Render_Stereo.cpp.s:
	$(MAKE) -f CMakeFiles/OculusVR.dir/build.make CMakeFiles/OculusVR.dir/Src/Util/Util_Render_Stereo.cpp.s
.PHONY : Src/Util/Util_Render_Stereo.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... OculusVR"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... Src/Kernel/OVR_Alg.o"
	@echo "... Src/Kernel/OVR_Alg.i"
	@echo "... Src/Kernel/OVR_Alg.s"
	@echo "... Src/Kernel/OVR_Allocator.o"
	@echo "... Src/Kernel/OVR_Allocator.i"
	@echo "... Src/Kernel/OVR_Allocator.s"
	@echo "... Src/Kernel/OVR_Atomic.o"
	@echo "... Src/Kernel/OVR_Atomic.i"
	@echo "... Src/Kernel/OVR_Atomic.s"
	@echo "... Src/Kernel/OVR_File.o"
	@echo "... Src/Kernel/OVR_File.i"
	@echo "... Src/Kernel/OVR_File.s"
	@echo "... Src/Kernel/OVR_FileFILE.o"
	@echo "... Src/Kernel/OVR_FileFILE.i"
	@echo "... Src/Kernel/OVR_FileFILE.s"
	@echo "... Src/Kernel/OVR_Log.o"
	@echo "... Src/Kernel/OVR_Log.i"
	@echo "... Src/Kernel/OVR_Log.s"
	@echo "... Src/Kernel/OVR_Math.o"
	@echo "... Src/Kernel/OVR_Math.i"
	@echo "... Src/Kernel/OVR_Math.s"
	@echo "... Src/Kernel/OVR_RefCount.o"
	@echo "... Src/Kernel/OVR_RefCount.i"
	@echo "... Src/Kernel/OVR_RefCount.s"
	@echo "... Src/Kernel/OVR_Std.o"
	@echo "... Src/Kernel/OVR_Std.i"
	@echo "... Src/Kernel/OVR_Std.s"
	@echo "... Src/Kernel/OVR_String.o"
	@echo "... Src/Kernel/OVR_String.i"
	@echo "... Src/Kernel/OVR_String.s"
	@echo "... Src/Kernel/OVR_String_FormatUtil.o"
	@echo "... Src/Kernel/OVR_String_FormatUtil.i"
	@echo "... Src/Kernel/OVR_String_FormatUtil.s"
	@echo "... Src/Kernel/OVR_String_PathUtil.o"
	@echo "... Src/Kernel/OVR_String_PathUtil.i"
	@echo "... Src/Kernel/OVR_String_PathUtil.s"
	@echo "... Src/Kernel/OVR_SysFile.o"
	@echo "... Src/Kernel/OVR_SysFile.i"
	@echo "... Src/Kernel/OVR_SysFile.s"
	@echo "... Src/Kernel/OVR_System.o"
	@echo "... Src/Kernel/OVR_System.i"
	@echo "... Src/Kernel/OVR_System.s"
	@echo "... Src/Kernel/OVR_ThreadsPthread.o"
	@echo "... Src/Kernel/OVR_ThreadsPthread.i"
	@echo "... Src/Kernel/OVR_ThreadsPthread.s"
	@echo "... Src/Kernel/OVR_Timer.o"
	@echo "... Src/Kernel/OVR_Timer.i"
	@echo "... Src/Kernel/OVR_Timer.s"
	@echo "... Src/Kernel/OVR_UTF8Util.o"
	@echo "... Src/Kernel/OVR_UTF8Util.i"
	@echo "... Src/Kernel/OVR_UTF8Util.s"
	@echo "... Src/OVR_DeviceHandle.o"
	@echo "... Src/OVR_DeviceHandle.i"
	@echo "... Src/OVR_DeviceHandle.s"
	@echo "... Src/OVR_DeviceImpl.o"
	@echo "... Src/OVR_DeviceImpl.i"
	@echo "... Src/OVR_DeviceImpl.s"
	@echo "... Src/OVR_JSON.o"
	@echo "... Src/OVR_JSON.i"
	@echo "... Src/OVR_JSON.s"
	@echo "... Src/OVR_LatencyTestImpl.o"
	@echo "... Src/OVR_LatencyTestImpl.i"
	@echo "... Src/OVR_LatencyTestImpl.s"
	@echo "... Src/OVR_Linux_DeviceManager.o"
	@echo "... Src/OVR_Linux_DeviceManager.i"
	@echo "... Src/OVR_Linux_DeviceManager.s"
	@echo "... Src/OVR_Linux_HIDDevice.o"
	@echo "... Src/OVR_Linux_HIDDevice.i"
	@echo "... Src/OVR_Linux_HIDDevice.s"
	@echo "... Src/OVR_Linux_HMDDevice.o"
	@echo "... Src/OVR_Linux_HMDDevice.i"
	@echo "... Src/OVR_Linux_HMDDevice.s"
	@echo "... Src/OVR_Linux_SensorDevice.o"
	@echo "... Src/OVR_Linux_SensorDevice.i"
	@echo "... Src/OVR_Linux_SensorDevice.s"
	@echo "... Src/OVR_Profile.o"
	@echo "... Src/OVR_Profile.i"
	@echo "... Src/OVR_Profile.s"
	@echo "... Src/OVR_SensorFilter.o"
	@echo "... Src/OVR_SensorFilter.i"
	@echo "... Src/OVR_SensorFilter.s"
	@echo "... Src/OVR_SensorFusion.o"
	@echo "... Src/OVR_SensorFusion.i"
	@echo "... Src/OVR_SensorFusion.s"
	@echo "... Src/OVR_SensorImpl.o"
	@echo "... Src/OVR_SensorImpl.i"
	@echo "... Src/OVR_SensorImpl.s"
	@echo "... Src/OVR_ThreadCommandQueue.o"
	@echo "... Src/OVR_ThreadCommandQueue.i"
	@echo "... Src/OVR_ThreadCommandQueue.s"
	@echo "... Src/Util/Util_LatencyTest.o"
	@echo "... Src/Util/Util_LatencyTest.i"
	@echo "... Src/Util/Util_LatencyTest.s"
	@echo "... Src/Util/Util_Render_Stereo.o"
	@echo "... Src/Util/Util_Render_Stereo.i"
	@echo "... Src/Util/Util_Render_Stereo.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

